"""This code is adapted from a YouTube tutorial from Tech with Tim called Learn Python with this ONE project!"""

import random

MAX_LINES = 6
MAX_BET = 100000
MIN_BET = 1

ROWS = 6
COLS = 6

#code for deposit in slot machine in £

def deposit():
    while True:
        amount = input("What would you like to deposit? £")
        if amount.isdigit():
            amount = int(amount)
            if amount > 0:
                break
            else:
                print("Amount must be greater than 0.")
        else:
            print("Please enter a number.")

    return amount

#code for the number of lines to bet on

def get_number_of_lines():
    while True:
        lines = input("Enter the number of lines to bet on (1-" + str(MAX_LINES) + ")? ")
        if lines.isdigit():
            lines = int(lines)
            if 1 <= lines <= MAX_LINES:
                break
            else:
                print("Number of lines must be between 1-3.")
                print(input("Please enter a valid number of lines (1-" + str(MAX_LINES) + ")? "))
        else:
            print("Please enter a number.")

    return lines

#code for deposit in slot machine in £
def get_bet():
    while True:
        bet = input("What would you like to bet on each line? £")
        if bet.isdigit():
            bet = int(bet)
            if MIN_BET <= bet <= MAX_BET:
                break
            else:
                print(f"The bet must be between £{MIN_BET} - £{MAX_BET}.")
        else:
            print("Please enter a valid bet amount.")

    return bet

#Slot machine code

symbol_count = {
    "A": 20,
    "B": 15,
    "C": 10,
    "D": 5
}

symbol_value = {
    "A": 2,
    "B": 20,
    "C": 200,
    "D": 2000
}

def get_slot_machine_spin(rows, cols, symbols):
    all_symbols = []
    for symbol, symbol_count in symbols.items():
        for _ in range(symbol_count):
            all_symbols.append(symbol)

    columns = []
    for _ in range(cols):
        column = []
        current_symbols = all_symbols[:]
        for _ in range(rows):
            value = random.choice(all_symbols)
            current_symbols.remove(value)
            column.append(value)

        columns.append(column)

    return columns

def print_slot_machine(columns):
    for row in range(len(columns[0])):
        for i, column in enumerate(columns):
            if i != len(columns) - 1:
                print(column[row], end=" | ")
            else:
                print(column[row], end="")

        print()

def check_winnings(columns, lines, bet, values):
    winnings = 0
    winning_lines = []
    for line in range(lines):
        symbol = columns[0][line]
        for column in columns:
            symbol_to_check = column[line]
            if symbol != symbol_to_check:
                break
        else:
            winnings += values[symbol] * bet
            winning_lines.append(line + 1)

    return winnings, winning_lines

#The main source of code to run the game

def spin():
    balance = deposit()
    q = "quit_game"
    lines = get_number_of_lines()
    bet = get_bet()
    total_bet = bet * lines
    while True:
        print(f"Current balance is £{balance}")
        answer = input("Press enter to play (q to quit_game).")
        if answer == q:
            break
        if answer != q:
            break
        if total_bet > balance:
            print(f"You do not have enough to bet that amount, your current balance is: £{balance}")
        else:
            balance += spin()

    print(f"You are betting £{bet} on {lines} lines. Total bet is equal to: £{total_bet}")
    slots = get_slot_machine_spin(ROWS, COLS, symbol_count)
    print_slot_machine(slots)
    winnings, winning_lines = check_winnings(slots, lines, bet, symbol_value)
    winning_balance = winnings + total_bet + balance
    loosing_balance = balance - total_bet
    if winnings <= 0:
        print("Better luck next time.")
        print("Your new balance is: ")
        print(f"£{loosing_balance}")
    if winnings >= 1:
        print(f"You won £{winnings}.")
        print(f"Winner! You won on lines: ", *winning_lines)
        print(f"Your new balance is £{winning_balance}")
    balance += spin()
spin()
